{
  "capabilities": [
    {
      "ident": "POWER",
      "name": "Power",
      "type": "boolean",
      "presentation": { "kind": "switch", "captionOn": "On", "captionOff": "Off" },
      "create": { "when": "profileHasAny", "keys": ["operation.airConOperationMode"] },
      "action": { "enableWhen": "profileWriteableAny", "writeableKeys": ["operation.airConOperationMode.mode"], "reassertOn": ["setup", "status"] },
      "read": { "sources": ["operation.airConOperationMode"], "map": { "POWER_ON": true, "POWER_OFF": false } },
      "write": { "template": { "operation": { "airConOperationMode": "@power_on_off" } } }
    },
    {
      "ident": "HVAC_MODE",
      "name": "Modus",
      "type": "integer",
      "presentation": {
        "kind": "enumeration",
        "options": [
          { "value": 0, "caption": "Off", "color": 8421504 },
          { "value": 1, "caption": "Auto", "color": 52651 },
          { "value": 2, "caption": "Cool", "color": 3442154 },
          { "value": 3, "caption": "Heat", "color": 16026947 },
          { "value": 4, "caption": "Dry", "color": 16777215 },
          { "value": 5, "caption": "Fan", "color": 8421504 }
        ]
      },
      "create": { "when": "profileHasAny", "keys": ["airConJobMode.currentJobMode", "hvacModes", "airState.support.hvacModes"] },
      "action": { "enableWhen": "profileWriteableAny", "writeableKeys": ["airConJobMode.currentJobMode.mode"], "reassertOn": ["setup", "status"] },
      "read": { "sources": ["airConJobMode.currentJobMode"], "map": { "OFF": 0, "AUTO": 1, "COOL": 2, "HEAT": 3, "AIR_DRY": 4, "FAN": 5 } },
      "write": { "enumMap": {
        "0": { "operation.airConOperationMode": "POWER_OFF" },
        "1": { "operation.airConOperationMode": "POWER_ON", "airConJobMode.currentJobMode": "AUTO" },
        "2": { "operation.airConOperationMode": "POWER_ON", "airConJobMode.currentJobMode": "COOL" },
        "3": { "operation.airConOperationMode": "POWER_ON", "airConJobMode.currentJobMode": "HEAT" },
        "4": { "operation.airConOperationMode": "POWER_ON", "airConJobMode.currentJobMode": "AIR_DRY" },
        "5": { "operation.airConOperationMode": "POWER_ON", "airConJobMode.currentJobMode": "FAN" }
      } },
      "visibility": { "hidden": false }
    },
    {
      "ident": "FAN_MODE",
      "name": "Lüfterstufe",
      "type": "integer",
      "presentation": {
        "kind": "enumeration",
        "options": [
          { "value": 10, "caption": "Auto", "color": 52651 },
          { "value": 11, "caption": "Low", "color": 3442154 },
          { "value": 12, "caption": "Mid", "color": 16777215 },
          { "value": 13, "caption": "High", "color": 16026947 },
          { "value": 14, "caption": "Power", "color": 16711680 }
        ]
      },
      "create": { "when": "profileHasAny", "keys": ["airFlow.windStrength", "airFlow.targetWindStrength", "airState.windStrength", "fanModes", "airState.support.fanModes"] },
      "action": { "enableWhen": "profileWriteableAny", "writeableKeys": ["airFlow.windStrength.mode", "airFlow.targetWindStrength.mode", "airState.windStrength.mode"], "reassertOn": ["setup", "status"] },
      "read": { "sources": ["airFlow.windStrength", "airFlow.targetWindStrength", "airState.windStrength"], "map": { "AUTO": 10, "LOW": 11, "MID": 12, "HIGH": 13, "POWER": 14 } },
      "write": { "firstOf": [
        { "profileWriteableAny": ["airFlow.windStrength"], "enumMap": {
          "10": { "airFlow.windStrength": "AUTO" },
          "11": { "airFlow.windStrength": "LOW" },
          "12": { "airFlow.windStrength": "MID" },
          "13": { "airFlow.windStrength": "HIGH" },
          "14": { "airFlow.windStrength": "POWER" }
        } }
      ] }
    },
    {
      "ident": "SWING",
      "name": "Swing",
      "type": "boolean",
      "presentation": { "kind": "switch", "captionOn": "On", "captionOff": "Off" },
      "create": { "when": "profileHasAny", "keys": ["windDirection.rotateUpDown", "windDirection.rotateLeftRight"] },
      "action": { "enableWhen": "profileWriteableAny", "writeableKeys": ["windDirection.rotateUpDown.mode", "windDirection.rotateLeftRight.mode"], "reassertOn": ["setup", "status"] },
      "read": { "sources": ["windDirection.rotateUpDown"] },
      "write": { "template": { "windDirection": { "rotateUpDown": "@bool", "rotateLeftRight": "@bool" } } }
    },
    {
      "ident": "SET_TEMP",
      "name": "Solltemperatur",
      "type": "float",
      "presentation": {
        "kind": "slider",
        "suffix": " °C",
        "rangeFromProfile": {
          "min": [
            "temperature.targetTemperature.value.w.min",
            "temperature.targetTemperature.value.r.min",
            "temperature.coolTargetTemperature.value.w.min",
            "temperature.heatTargetTemperature.value.w.min",
            "twoSetTemperature.coolTargetTemperature.value.w.min",
            "twoSetTemperature.heatTargetTemperature.value.w.min",
            "temperatureInUnits.0.coolTargetTemperature.value.w.min",
            "temperatureInUnits.0.heatTargetTemperature.value.w.min",
            "temperatureInUnits.1.coolTargetTemperature.value.w.min",
            "temperatureInUnits.1.heatTargetTemperature.value.w.min",
            "temperatureRange.min", "targetTemperatureRange.min", "airState.support.tempRange.min"
          ],
          "max": [
            "temperature.targetTemperature.value.w.max",
            "temperature.targetTemperature.value.r.max",
            "temperature.coolTargetTemperature.value.w.max",
            "temperature.heatTargetTemperature.value.w.max",
            "twoSetTemperature.coolTargetTemperature.value.w.max",
            "twoSetTemperature.heatTargetTemperature.value.w.max",
            "temperatureInUnits.0.coolTargetTemperature.value.w.max",
            "temperatureInUnits.0.heatTargetTemperature.value.w.max",
            "temperatureInUnits.1.coolTargetTemperature.value.w.max",
            "temperatureInUnits.1.heatTargetTemperature.value.w.max",
            "temperatureRange.max", "targetTemperatureRange.max", "airState.support.tempRange.max"
          ],
          "step": [
            "temperature.targetTemperature.value.w.step",
            "temperature.targetTemperature.value.r.step",
            "temperature.coolTargetTemperature.value.w.step",
            "temperature.heatTargetTemperature.value.w.step",
            "twoSetTemperature.coolTargetTemperature.value.w.step",
            "twoSetTemperature.heatTargetTemperature.value.w.step",
            "temperatureInUnits.0.coolTargetTemperature.value.w.step",
            "temperatureInUnits.0.heatTargetTemperature.value.w.step",
            "temperatureInUnits.1.coolTargetTemperature.value.w.step",
            "temperatureInUnits.1.heatTargetTemperature.value.w.step",
            "temperatureRange.step", "targetTemperatureRange.step", "airState.support.tempRange.step"
          ]
        }
      },
      "create": { "when": "profileHasAny", "keys": ["temperature.targetTemperature", "temperature.coolTargetTemperature", "temperature.heatTargetTemperature", "temperature.autoTargetTemperature"] },
      "action": { "enableWhen": "profileWriteableAny", "writeableKeys": ["temperature.targetTemperature.mode", "temperature.coolTargetTemperature.mode", "temperature.heatTargetTemperature.mode", "temperature.autoTargetTemperature.mode"], "reassertOn": ["setup", "status"] },
      "read": { "sources": ["temperature.targetTemperature", "temperature.coolTargetTemperature", "temperature.heatTargetTemperature", "temperature.autoTargetTemperature"] },
      "write": {
        "firstOf": [
          { "profileHasAny": ["temperature.targetTemperature"], "template": { "temperature": { "targetTemperature": "@float" } } },
          { "profileHasAny": ["temperature.coolTargetTemperature"], "template": { "temperature": { "coolTargetTemperature": "@float" } } },
          { "profileHasAny": ["temperature.heatTargetTemperature"], "template": { "temperature": { "heatTargetTemperature": "@float" } } },
          { "profileHasAny": ["temperature.autoTargetTemperature"], "template": { "temperature": { "autoTargetTemperature": "@float" } } },
          { "profileHasAny": ["twoSetTemperature.coolTargetTemperature"], "template": { "twoSetTemperature": { "coolTargetTemperature": "@float" } } },
          { "profileHasAny": ["twoSetTemperature.heatTargetTemperature"], "template": { "twoSetTemperature": { "heatTargetTemperature": "@float" } } }
        ]
      },
      "visibility": { "hidden": false }
    },
    {
      "ident": "CUR_TEMP",
      "name": "Isttemperatur",
      "type": "float",
      "presentation": { "kind": "value", "suffix": " °C", "digits": 1 },
      "create": { "when": "profileHasAny", "keys": [
        "temperature.currentTemperature",
        "airState.tempState.current",
        "currentTemperature",
        "indoorTemperature",
        "temperatureInUnits.0.currentTemperature",
        "temperatureInUnits.1.currentTemperature"
      ] },
      "action": { "enableWhen": "never" },
      "read": { "sources": [
        "temperature.currentTemperature",
        "airState.tempState.current",
        "currentTemperature",
        "indoorTemperature",
        "temperatureInUnits.0.currentTemperature",
        "temperatureInUnits.1.currentTemperature"
      ] },
      "visibility": { "hidden": false }
    },
    {
      "ident": "POWER_SAVE",
      "name": "Power Save",
      "type": "boolean",
      "presentation": { "kind": "switch", "captionOn": "An", "captionOff": "Aus" },
      "create": { "when": "profileHasAny", "keys": ["powerSave.powerSaveEnabled"] },
      "action": { "enableWhen": "profileWriteableAny", "writeableKeys": ["powerSave.powerSaveEnabled.mode"], "reassertOn": ["setup", "status"] },
      "read": { "sources": ["powerSave.powerSaveEnabled"] },
      "write": { "template": { "powerSave": { "powerSaveEnabled": "@bool" } } },
      "visibility": { "hidden": true}
    },
    {
      "ident": "DISPLAY_LIGHT",
      "name": "Display Licht",
      "type": "boolean",
      "presentation": { "kind": "switch", "captionOn": "An", "captionOff": "Aus" },
      "create": { "when": "profileHasAny", "keys": ["display.light"] },
      "action": { "enableWhen": "profileWriteableAny", "writeableKeys": ["display.light.mode"], "reassertOn": ["setup", "status"] },
      "read": { "sources": ["display.light"], "string_true": ["ON"], "string_false": ["OFF"] },
      "write": { "template": { "display": { "light": "@onoff" } } }
    },
    {
      "ident": "AIR_CLEAN",
      "name": "Luftreinigung",
      "type": "boolean",
      "presentation": { "kind": "switch", "captionOn": "Start", "captionOff": "Stop" },
      "create": { "when": "profileHasAny", "keys": ["operation.airCleanOperationMode"] },
      "action": { "enableWhen": "profileWriteableAny", "writeableKeys": ["operation.airCleanOperationMode.mode"], "reassertOn": ["setup", "status"] },
      "read": { "sources": ["operation.airCleanOperationMode"], "string_true": ["START", "ON"], "string_false": ["STOP", "OFF"] },
      "write": { "template": { "operation": { "airCleanOperationMode": "@startstop" } } }
    },
    {
      "ident": "TIMER_START_REL_TIME",
      "name": "Timer Start (relativ)",
      "type": "integer",
      "presentation": { "kind": "slider", "range": { "min": 1, "max": 720, "step": 1, "digits": 0, "suffix": " min" } },
      "create": { "when": "always" },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "composite": { "combine": "hm_to_minutes", "parts": [ { "path": "timer.relativeHourToStart" }, { "path": "timer.relativeMinuteToStart" } ] } },
      "write": { "composite": { "decompose": "minutes_to_hm", "targets": [ { "path": "timer.relativeHourToStart" }, { "path": "timer.relativeMinuteToStart" } ] }, "clamp": { "min": 1, "max": 720 } }
    },
    {
      "ident": "TIMER_STOP_REL_TIME",
      "name": "Timer Stop (relativ)",
      "type": "integer",
      "presentation": { "kind": "slider", "range": { "min": 1, "max": 720, "step": 1, "digits": 0, "suffix": " min" } },
      "create": { "when": "always" },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "composite": { "combine": "hm_to_minutes", "parts": [ { "path": "timer.relativeHourToStop" }, { "path": "timer.relativeMinuteToStop" } ] } },
      "write": { "composite": { "decompose": "minutes_to_hm", "targets": [ { "path": "timer.relativeHourToStop" }, { "path": "timer.relativeMinuteToStop" } ] }, "clamp": { "min": 1, "max": 720 } }
    },
    {
      "ident": "SLEEP_STOP_REL_TIME",
      "name": "Sleep Stop (relativ)",
      "type": "integer",
      "presentation": { "kind": "slider", "range": { "min": 1, "max": 720, "step": 1, "digits": 0, "suffix": " min" } },
      "create": { "when": "always" },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "composite": { "combine": "hm_to_minutes", "parts": [ { "path": "sleepTimer.relativeHourToStop" }, { "path": "sleepTimer.relativeMinuteToStop" } ] } },
      "write": { "composite": { "decompose": "minutes_to_hm", "targets": [ { "path": "sleepTimer.relativeHourToStop" }, { "path": "sleepTimer.relativeMinuteToStop" } ] }, "clamp": { "min": 1, "max": 720 } }
    },
    {
      "ident": "TIMER_START_REL_HOUR",
      "name": "Timer Start Stunde",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " h" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["timer.relativeHourToStart"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.relativeHourToStart"] },
      "write": { "template": { "timer": { "relativeHourToStart": "@int" } } }
    },
    {
      "ident": "TIMER_START_REL_MIN",
      "name": "Timer Start Minute",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " min" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["timer.relativeMinuteToStart"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.relativeMinuteToStart"] },
      "write": { "template": { "timer": { "relativeMinuteToStart": "@int" } } }
    },
    {
      "ident": "TIMER_STOP_REL_HOUR",
      "name": "Timer Stop Stunde",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " h" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["timer.relativeHourToStop"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.relativeHourToStop"] },
      "write": { "template": { "timer": { "relativeHourToStop": "@int" } } }
    },
    {
      "ident": "TIMER_STOP_REL_MIN",
      "name": "Timer Stop Minute",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " min" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["timer.relativeMinuteToStop"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.relativeMinuteToStop"] },
      "write": { "template": { "timer": { "relativeMinuteToStop": "@int" } } }
    },
    {
      "ident": "TIMER_START_ABS_HOUR",
      "name": "Timer Start Stunde (abs.)",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " h" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["timer.absoluteHourToStart"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.absoluteHourToStart"] },
      "write": { "template": { "timer": { "absoluteHourToStart": "@int" } } }
    },
    {
      "ident": "TIMER_START_ABS_MIN",
      "name": "Timer Start Minute (abs.)",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " min" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["timer.absoluteMinuteToStart"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.absoluteMinuteToStart"] },
      "write": { "template": { "timer": { "absoluteMinuteToStart": "@int" } } }
    },
    {
      "ident": "TIMER_STOP_ABS_HOUR",
      "name": "Timer Stop Stunde (abs.)",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " h" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["timer.absoluteHourToStop"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.absoluteHourToStop"] },
      "write": { "template": { "timer": { "absoluteHourToStop": "@int" } } }
    },
    {
      "ident": "TIMER_STOP_ABS_MIN",
      "name": "Timer Stop Minute (abs.)",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " min" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["timer.absoluteMinuteToStop"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.absoluteMinuteToStop"] },
      "write": { "template": { "timer": { "absoluteMinuteToStop": "@int" } } }
    },
    {
      "ident": "SLEEP_STOP_REL_HOUR",
      "name": "Sleep Stop Stunde",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " h" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["sleepTimer.relativeHourToStop"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["sleepTimer.relativeHourToStop"] }
    },
    {
      "ident": "TIMER_START_SET",
      "name": "Timer Start Aktivieren",
      "type": "boolean",
      "presentation": { "kind": "switch", "captionOn": "Aktivieren", "captionOff": "Deaktivieren" },
      "create": { "when": "always" },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.relativeEnabled"], "map": { "ON": 1, "OFF": 0, "START": 1, "STOP": 0 } },
      "write": { "template": { "timer": { "relativeStartTimer": "@onoff" } } }
    },
    {
      "ident": "TIMER_STOP_SET", 
      "name": "Timer Stop Aktivieren",
      "type": "boolean",
      "presentation": { "kind": "switch", "captionOn": "Aktivieren", "captionOff": "Deaktivieren" },
      "create": { "when": "always" },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["timer.relativeStopEnabled"], "map": { "ON": 1, "OFF": 0, "START": 1, "STOP": 0 } },
      "write": { "template": { "timer": { "relativeStopTimer": "@onoff" } } }
    },
    {
      "ident": "SLEEP_STOP_SET", 
      "name": "Sleep Timer Aktivieren",
      "type": "boolean",
      "presentation": { "kind": "switch", "captionOn": "Aktivieren", "captionOff": "Deaktivieren" },
      "create": { "when": "always" },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["sleepTimer.relativeEnabled"], "map": { "ON": 1, "OFF": 0, "START": 1, "STOP": 0 } },
      "write": { "template": { "sleepTimer": { "relativeSleepTimer": "@onoff" } } }
    },
    {
      "ident": "SLEEP_STOP_REL_MIN",
      "name": "Sleep Stop Minute",
      "type": "integer",
      "presentation": { "kind": "value", "suffix": " min" },
      "visibility": { "hidden": true },
      "create": { "when": "profileHasAny", "keys": ["sleepTimer.relativeMinuteToStop"] },
      "action": { "enableWhen": "always", "reassertOn": ["setup", "status"] },
      "read": { "sources": ["sleepTimer.relativeMinuteToStop"] }
    }
  ]
}
